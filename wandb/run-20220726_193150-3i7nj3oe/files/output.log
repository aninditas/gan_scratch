INFO: Starting training:
        Image:           data/1_input_scratch/JPEGImages
        Label:           data/1_input_scratch/SegmentationClass
        Checkpoints:     data/14_output_checkpoint_unet
        Epochs:          500
        Batch size:      8
        Learning rate:   1e-05
        Training size:   450
        Validation size: 50
        Checkpoints:     True
        Device:          cuda
        Images scaling:  0.1
        Mixed Precision: False
Epoch 1/500:   0%|          | 0/450 [00:02<?, ?img/s]
Traceback (most recent call last):
  File "unet/train.py", line 196, in <module>
    train_net(net=net,
  File "unet/train.py", line 86, in train_net
    for batch in train_loader:
  File "C:\Users\anindita\anaconda3\envs\envTorch1\lib\site-packages\torch\utils\data\dataloader.py", line 530, in __next__
    data = self._next_data()
  File "C:\Users\anindita\anaconda3\envs\envTorch1\lib\site-packages\torch\utils\data\dataloader.py", line 1224, in _next_data
    return self._process_data(data)
  File "C:\Users\anindita\anaconda3\envs\envTorch1\lib\site-packages\torch\utils\data\dataloader.py", line 1250, in _process_data
    data.reraise()
  File "C:\Users\anindita\anaconda3\envs\envTorch1\lib\site-packages\torch\_utils.py", line 457, in reraise
    raise exception
RuntimeError: Caught RuntimeError in DataLoader worker process 0.
Original Traceback (most recent call last):
  File "C:\Users\anindita\anaconda3\envs\envTorch1\lib\site-packages\torch\utils\data\_utils\worker.py", line 287, in _worker_loop
    data = fetcher.fetch(index)
  File "C:\Users\anindita\anaconda3\envs\envTorch1\lib\site-packages\torch\utils\data\_utils\fetch.py", line 52, in fetch
    return self.collate_fn(data)
  File "C:\Users\anindita\anaconda3\envs\envTorch1\lib\site-packages\torch\utils\data\_utils\collate.py", line 157, in default_collate
    return elem_type({key: default_collate([d[key] for d in batch]) for key in elem})
  File "C:\Users\anindita\anaconda3\envs\envTorch1\lib\site-packages\torch\utils\data\_utils\collate.py", line 157, in <dictcomp>
    return elem_type({key: default_collate([d[key] for d in batch]) for key in elem})
  File "C:\Users\anindita\anaconda3\envs\envTorch1\lib\site-packages\torch\utils\data\_utils\collate.py", line 138, in default_collate
    return torch.stack(batch, 0, out=out)
RuntimeError: stack expects each tensor to be equal size, but got [3, 83, 105] at entry 0 and [3, 84, 105] at entry 1